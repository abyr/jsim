// Generated by CoffeeScript 1.6.2
(function() {
  var Document, jd;

  Document = function(s) {
    this.init = function(s) {
      var s0;

      if (s === 'html') {
        return document.documentElement;
      }
      if (s === 'head') {
        return document.head;
      }
      if (s === 'body') {
        return document.body;
      }
      if (s.indexOf(',' === -1)) {
        window.console.log('single selector', s);
        s0 = s[0];
        s = s.substr(1);
        if (s0 === '#') {
          return this.byId(s);
        } else if (s0 === '.') {
          return this.byClass(s);
        } else {
          return this.byTag(s0 + s);
        }
      }
      return this.bySelectors(s);
    };
    this.byId = function(s) {
      window.console.log('by id', s);
      return document.getElementById(s);
    };
    this.byClass = function(s) {
      window.console.log('by class', s);
      return document.getElementsByClassName(s);
    };
    this.byTag = function(s) {
      window.console.log('by tag', s);
      return document.getElementsByTagName(s);
    };
    this.bySelectors = function(ss) {
      var i, list, selectors;

      window.console.log('by selectors', ss);
      selectors = ss.split(",");
      list = [];
      i = selectors.length - 1;
      while (i >= 0) {
        list.push(this.bySelector(selectors[i]));
        i--;
      }
      return list;
    };
    this.bySelector = function(s) {
      var s0;

      window.console.log('by selector', s);
      s0 = s[0];
      s = s.substr(1);
      if (s0 === '#') {
        return this.byId(s);
      } else if (s0 === '.') {
        return this.byClass(s);
      } else {
        return false;
      }
    };
    this.val = function(el) {
      return false;
    };
    this.html = function(el) {
      return false;
    };
    return this.init(s);
  };

  Element.prototype.html = function(v) {
    if (!v) {
      return this.innerHTML;
    }
    if (v) {
      this.innerHTML = "" + v;
    }
    return void 0;
  };

  jd = Document;

  window.jd = jd;

  window.onload = function() {
    return window.console.log('=', jd('#target'));
  };

}).call(this);
